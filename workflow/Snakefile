from pathlib import Path

configfile: "config/config.yaml"
f5 = Path(config["f5"])
fq = Path(config["fq"])

fq_files = [filepath for filepath in Path(fq).glob('**/*')]
samples = [".".join(read.name.split('.')[:-1]) for read in fq_files]

rule all:
    input:
        #index = expand(fq / "{sample}.fastq.index", sample=samples),
        #fai = expand(fq / "{sample}.fastq.index.fai", sample=samples),
        #gzi = expand(fq /"{sample}.fastq.index.gzi", sample=samples),
        #readdb = expand(fq / "{sample}.fastq.index.readdb", sample=samples),
        sorted= expand("results/minimap2_results/{sample}.bam", sample=samples),


rule nanopolishIndexing:
    input:
        fq = fq / "{sample}.fastq",
        f5 = f5
    output:
        index = "results/nanopolish_results/{sample}.fastq.index",
        fai = "results/nanopolish_results/{sample}.fastq.index.fai",
        gzi = "results/nanopolish_results/{sample}.fastq.index.gzi",
        readdb = "results/nanopolish_results/{sample}.fastq.index.readdb"
    threads: 1
    container: "https://depot.galaxyproject.org/singularity/nanopolish:0.13.1--ha077697_0"
    log: "results/nanopolish_results{sample}_index.log"
    shell:
        """
        (nanopolish index -d {input.f5} {input.fq}) >{log} 2>&1
        """

rule minimap2Align:
    input:
        reference = config["ref"],
        fq = fq / "{sample}.fastq"
    output:
        sam = temp("results/minimap2_results/{sample}.sam")
    threads: 3
    container: "https://depot.galaxyproject.org/singularity/minimap2:2.24--h7132678_1"
    log: "results/minimap2_results/{sample}_mapping.log"
    shell:
        """
        (
        minimap2 -t {threads} -ax splice -uf -k14 --MD {input.reference} {input.fq} -o {output.sam}
        ) >{log} 2>&1
        """

rule samtools:
    input:
        sam = rules.minimap2Align.output.sam
    output:
        sorted = "results/minimap2_results/{sample}.bam",
        index = "resultsminimap2_results/{sample}.bam.index"
    threads: 6
    container: "https://quay.io/biocontainers/samtools:1.16.1--h6899075_1"
    log: "results/minimap2_results/{sample}_samtools.log"
    shell:
        """
        (
        samtools view -Sb {input.sam} | \
        samtools sort -o {output.sorted}
        samtools index {output.sorted}
        ) >{log} 2>&1
        """

rule nanopolishCallMethylation:
    input:
        fq = fq / "{sample}.fastq",
        bam = rules.samtools.output.sorted,
        reference = config["ref"],
        index = rules.nanopolishIndexing.output.index,
        fai = rules.nanopolishIndexing.output.fai,
        gzi = rules.nanopolishIndexing.output.gzi,
        readdb = rules.nanopolishIndexing.output.readdb
    output:
        meth = "nanopolish_results/{sample}_methylation.tsv"
    threads: 1
    container: "https://depot.galaxyproject.org/singularity/nanopolish:0.13.1--ha077697_0"
    log: "nanopolish_results/{sample}_methylation.log"
    shell:
        """
        nanopolish call-methylation -t {threads} \
        -r {input.fq} -b {input.bam} -g {input.reference}
        """

rule calcMethylation:
    input:
        tsv = rules.nanopolishCallMethylation.output.meth
    output:
        freq = "nanopolish_results/frequency.tsv"
    threads: 1
    container: "https://depot.galaxyproject.org/singularity/nanopolish:0.13.1--ha077697_0"
    log: "nanopolish_results/frequency.log"
    shell:
        """
        scripts/calculate_methylation_frequency.py
        """


